SELECT employee_id, first_name, last_name
FROM employees
ORDER BY employee_id DESC;
-- select 뒤의 열들만 조회
-- 명령어는 대문자 나머지는 소문자로 작성 권장
-- employee_id를 기준으로 내림차순(DESC) 정렬

SELECT DISTINCT job_id
FROM employees
-- job_id를 기준으로 고유한 값들만 
-- 중복 제거된 결과

SELECT employee_id AS 사원번호, first_name AS 이름, last_name AS 성
FROM employees;
-- AS를 사용하여 열이름을 변경하여 출력한다.

SELECT employee_id, first_name || last_name
FROM employees;
-- 두 개 열을 붙여서 하나의 데이터 값으로 나타낸다.

SELECT employee_id, first_name || ' ' || last_name, email ||'@'||'company.com'
FROM employees;
-- 두 개 열을 붙여서 하나의 데이터 값으로 나타낸다.
-- 가운데 한칸 띄기

SELECT employee_id, salary, salary+500, salary-100, (salary*1.1)/2
FROM   employees;
새로운 열을 생성하는것이 아니라 보여만 주는것이다.

SELECT employee_id, AS 사원번호,
        salary AS 급여,
        salary+500 AS 추가급여,
        salary-100 AS 인하급여,
        (salary *1.1)/2 AS 조정급여
FROM employees;
-- 열 이름을 별명으로 잠시 보여줄때만 사용된다.

SELECT *
FROM employees
WHERE employee_id = 100;
-- 아이디가 100 인 사람의 정보만 출력;

SELECT *
FROM employees
WHERE first_name = 'David';
-- first_name 에서 David 만 출력

SELECT *
FROM employees
WHERE employee_id >= 105;
-- employee_id 105 이상만 출력

SELECT *
FROM employees
WHERE salary BETWEEN 10000 AND 20000;
-- BETWEEN a AND b a 와 b 사이의 수 >= <=

SELECT *
FROM employees
WHERE salary IN (10000,17000,24000);
-- IN =와 유사하지만 =은 하나만 조건으로 지정하고 IN 은 값을 여러개 설정 

SELECT *
FROM employees
WHERE job_id LIKE 'AD%';
-- LIKE 는 명확하지 않은 조건으로 찾을때
-- ~처럼 ~같은
-- 조건에는 문자나 숫자를 포함할 수 있다.
-- % 모든 문자 _ 한글자 라는 의미이다.

SELECT *
FROM employees
WHERE manager_id IS NULL;
-- 데이터 값이 null 인 경우를 조회 
-- 0 이나 공백이 아닌 아무것도 없는 값이 null

SELECT *
FROM employees
WHERE salary > 4000
AND job_id = 'IT_PROG';
--  조건을 모두 충족하는 데이터를 검색 
--  AND를 계속 붙여 추가할 수 있다.

SELECT *
FROM employees
WHERE salary > 4000
AND job_id = 'IT_PROG'
OR job_id = 'FI_ACCOUNT';
--  조건을 모두 충족하는 데이터를 검색 
--  AND나 OR 를 계속 붙여 추가할 수 있다.

SELECT *
FROM employees
WHERE employee_id <> 105;
--  <> 아니다. != 과 같다 

SELECT last_name,
       LOWER(last_name) LOWER적용3 ,
       UPPER(last_name) UPPER적용,
       email,
       INITCAP(email) INITCAP적용
FROM   employees;
--  employee 테이블에서 last_name 을 소문자와 대문자로 ㅊ울력
-- email 은 첫 글자만 대문자로 출력

SELECT job_id,
       SUBSTR(job_id,1,2)
FROM   employees;
--  employee 테이블에서 job_id 값의 첫 자리부터 두개 문자 출력

SELECT job_id,
       REPLACE(job_id,'ACCOUNT','ACCNT') 적용결과
FROM   employees;

--  employee 테이블에서 REPLACE('문자열' or 열 이름, '바꾸려는 문자열', '바뀔 문자열') 로 바꿈

SELECT first_name,
       LPAD(first_name,12,'*') 적용결과
FROM   employees;
--  employee 테이블에서 first_name 값에서 12자리로 만들고 나머지를 별로 채운다

SELECT job_id,
       LTRIM(job_id, 'F') LTRIM적용결과,
       RTRIM(job_id, 'T') RTRIM적용결과
FROM   employees;
--  글자를 만나면 삭제

SELECT 'start'||TRIM('   - space -   ')|| 'end' 제거된_공백
FROM dual;
--  문자열 중간에 있는 공백을 제외한 모든 공백이 제거
